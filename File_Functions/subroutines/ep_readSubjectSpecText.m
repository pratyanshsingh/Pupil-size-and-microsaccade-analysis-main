function outData = ep_readSubjectSpecText(EPdata, specFileName)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% EPdata = ep_readSubjectSpecText(EPdata, specFileName) - reads in subject specs text file
% and replaces subject specs structure in EPdata with the new information.  Also subject names.
%
%Inputs
%   EPdata         : Structured array with the data and accompanying information.  See readData.
%	specFileName: file name for subject specs text file, including path and suffix.
%
%Outputs
%   EPdata         : Structured array with the data and accompanying information.  See readData.
%
% History:
%
% by Joseph Dien (11/16)
% jdien07@mac.com
%
% modified 11/30/19 JD
% Enabled reading of text files with a greater range of variations in character encoding, end-of-line markers, and field separation markers.
%
% bugfix 1/20/20 JD
% Fixed crash.
%
% bugfix 2/26/21 JD
% Fixed crash.
%
% bugfix 7/29/21 JD
% Fixed not reading subject spec files created by Edit function correctly (due to assuming first column is to be ignored as in ones generated by writeData functions).
% Turns out that was in itself a bug as EP files do not necessarily have subspecnames so that first column is needed to provide the subnames.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%     Copyright (C) 1999-2025  Joseph Dien
%
%     This program is free software: you can redistribute it and/or modify
%     it under the terms of the GNU General Public License as published by
%     the Free Software Foundation, either version 3 of the License, or
%     (at your option) any later version.
%
%     This program is distributed in the hope that it will be useful,
%     but WITHOUT ANY WARRANTY; without even the implied warranty of
%     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%     GNU General Public License for more details.
%
%     You should have received a copy of the GNU General Public License
%     along with this program.  If not, see <http://www.gnu.org/licenses/>.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

global EPtictoc

outData=[];
numSubs=length(EPdata.subNames);
[theHeader, theData, theDelim] = ep_textScan(specFileName,2);
ep_tictoc;if EPtictoc.stop;EPtictoc.stop=0;ep('start');return;end
if isempty(theData)
    disp(['Error: Addition of subject spec information failed.']);
else
%     if strcmp(theHeader{1}{1},'subject') && strcmp(theHeader{1}{2},'subject') %for backwards compatibility with subject spec text files where the first column is ignored subject labels
%         theHeader{1}=theHeader{1}(2:end);
%         theData=theData(:,2:end);
%     end
    numSpecs=size(theData,2);
    specNames=cell(numSpecs,1);
    for iSpec=1:numSpecs
        specNames{iSpec}=theHeader{1}{iSpec};
    end
    if size(theData,1) ~= numSubs
        disp(['Error: Number of subjects in the subject specs text file is incorrect.']);
    else
        subNames=cell(numSubs,1);
        for iSubject=1:numSubs
            subNames{iSubject}=theData{iSubject,1};
        end
        subjectSpecs=cell(numSubs,numSpecs);
        for iSpec=1:numSpecs
            for iSubject=1:size(theData,1)
                subjectSpecs{iSubject,iSpec}=theData{iSubject,iSpec};
            end
        end
        disp('Replacing current contents of subject specs structure with contents of the subject specs text file.');
        EPdata.subjectSpecs=subjectSpecs;
        EPdata.subjectSpecNames=specNames;
        EPdata.subNames=subNames;
        err=ep_checkEPfile(EPdata);
        if ~err
            outData=EPdata;
        end
    end
end

